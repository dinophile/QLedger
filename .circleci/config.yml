version: 2
jobs:
  build_and_test:
    docker:
      - image: circleci/golang:1.11
      - image: circleci/postgres:10
        environment:
          POSTGRES_USER: test_user
          POSTGRES_DB: test_ledgerdb
          POSTGRES_PASSWORD: test_password
    working_directory: /go/src/github.com/RealImage/QLedger
    steps:
      - checkout
      - run:
          name: "Install Dependencies"
          command: sudo apt-get update && sudo apt-get install postgresql-client
      - run:
          name: Build
          command: go build
      - run:
          name: "Enforce Go Formatted Code" # https://circleci.com/blog/enforce-build-standards/#enforce-code-formatting
          command: "! go fmt ./... 2>&1 | read"
      - run:
          name: "Identify Vet Errors"
          command: go vet ./...
      - run:
          name: Test
          command: psql $TEST_DATABASE_URL < schema.sql; go test ./... -race -p=1
          environment:
            TEST_DATABASE_URL: "postgres://test_user@0.0.0.0:5432/test_ledgerdb?sslmode=disable"
  
  deploy: &deploy-environment
    docker: 
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/RealImage/QLedger
    steps: 
      - checkout
      - setup_remote_docker
      - run: bash ./scripts/install_terraform.sh
      - run: bash ./scripts/apply_${tag}.sh

  deploy_stage:
    <<: *deploy-environment
    environment:
      tag: stage

  deploy_prod:
    <<: *deploy-environment
    environment:
      tag: prod

workflows:
  version: 2
  stage_deploy:
    jobs:
      - build_and_test:
          filters:
            branches:
              only: 
                - master
      - deploy_stage:
          requires:
            - build_and_test
          filters:
            branches:
              only: 
                - master